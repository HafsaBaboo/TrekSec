openapi: 3.0.0
info:
  version: '1.0'
  title: "TreckSec OpenAPI 3.0"
  description: API for trecking feeling secure
  license:
    name: MIT
servers:
  - url: http://localhost:8000/api/v1
    description: Localhost
paths:
  
  
  /api/user/registraizone:
    post:
      description: >-
        Creates a new user in the system.
      summary: Register a new utente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - nomeCognome
                - telefono
                - email
                - password
                - checkPassword
                - privacy
              properties:
                nomeCognome:
                  type: string
                  description: 'Name and surname of the utente'
                telefono:
                  type: string
                  description: 'Phone number of the utente'
                email:
                  type: string
                  description: 'Email address of the utente'
                password:
                  type: string
                  description: 'Password of the utente'
                checkPassword:
                  type: string
                  description: 'check of the password address of the utente'
                privacy:
                  type: boolean
                  description: 'accept data usage'
      responses:
        '201':
          description: 'User created. Link in the Location header'
          headers:
            'Location':
              schema:
                type: string
              description: Link to the newly created user.
              
  /api/user/registraizone:
    get:
      description: >-
        Get registration page
      summary: Register a new utente
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: 'Register'
          content:
            application/json:
              schema:
                type: object
                items:

  /api/user/login:
    get:
      description: >-
        'get the login page'
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Login'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /api/users/login:
    post:
      description: >-
        'Login of the user'
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: 'Email address of the utente'
                password:
                  type: string
                  description: 'Password of the utente'
      responses:
        '200':
          description: 'Login'
          content:
            application/json:
              schema:
                type: object
                items:
                  
  /api/user/resetPassword:
    post:
      description: >-
        'post the email for the password resetting'
      summary: Reset user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: 'Email adress'
      responses:
        '200':
          description: 'Login'
          content:
            application/json:
              schema:
                type: object
                
  /api/user/resetPassword:
    get:
      description: >-
        'Get the page to set the email for the password resetting'
      summary: Reset user
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Reset password'
          content:
            application/json:
              schema:
                type: object
  
  /api/user/newPassword:
    post:
      description: >-
        'Reset the password of the user'
      summary: Reset user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: 'Email adress'
      responses:
        '200':
          description: 'Login'
          content:
            application/json:
              schema:
                type: object
                
  /api/user/newPassword:
    get:
      description: >-
        'Get the reset page'
      summary: Reset user
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Reset password'
          content:
            application/json:
              schema:
                type: object
                
  /users/map:
    get:
      description: >-
        'Request the map to OpenStreetMap'
      summary: Map
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Map'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /api/user/directAccess:
    get:
      description: >-
        'Request the map to OpenStreetMap'
      summary: Map
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Map'
          content:
            application/json:
              schema:
                type: object
                items:
                
                
  /users/map/widgets:
     get:
      description: >-
        'Share the gadgets of the app'
      summary: Gadgets
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Gadgets'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/weather:
     get:
      description: >-
        'Request the interface for weather from 3BMeteo'
      summary: See the Weather
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Weather interface'
          content:
            application/json:
              schema:
                type: object
                items:
  
  /users/map/widgets/compass:
    get:
      description: >-
        'Request the interface for compass from Online Compass'
      summary: See the Compass
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Compass gadget'
          content:
            application/json:
              schema:
                type: object
                items:
  
  /users/map/widgets/Sos:
    post:
      description: >-
        Insert the number after the request of Sos to call the CallCenter
      summary: Insert the number of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - telefono
              properties:
                telefono:
                  type: string
                  description: 'Phone number of the user'
      responses:
        '201':
          description: 'User call. Insert the number of the user'
          headers:
            'Sos':
              schema:
                type: string
              description: Link to start call.
  
  /users/map/widgets/report:
    get:
      description: >-
        'Share all the damage that you can report'
      summary: Report the Damages
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Report gadget'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/report/bear:
     post:
      description: >-
        'Send the position of bear'
      summary: Insert the position of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              properties:
                  type: 
                  description: 'Coordinate and type of danger (bear)'
      responses:
        '201':
          description: 'User call. Insert the new danger'
          headers:
            'New bear':
              schema:
                type: String
              description: Link to send information.
  
  /users/map/widgets/report/fire:
     post:
      description: >-
        'Send the position of fire'
      summary: Insert the position of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              properties:
                  type: 
                  description: 'Coordinate and type of danger (fire)'
      responses:
        '201':
          description: 'User call. Insert the new danger'
          headers:
            'New fire':
              schema:
                type: String
              description: Link to send information.
              
  /users/map/widgets/report/avalanche:
     post:
      description: >-
        'Send the position of avalanche'
      summary: Insert the position of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              properties:
                  type: 
                  description: 'Coordinate and type of danger (avalanche)'
      responses:
        '201':
          description: 'User call. Insert the new danger'
          headers:
            'New bear':
              schema:
                type: String
              description: Link to send information.
  
  /users/map/widgets/report/hunting:
     post:
      description: >-
        'Send the position of hunting'
      summary: Insert the position of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              properties:
                  type: 
                  description: 'Coordinate and type of danger (hunting)'
      responses:
        '201':
          description: 'User call. Insert the new danger'
          headers:
            'New hunting':
              schema:
                type: String
              description: Link to send information.
  
  /users/map/widgets/filter:
    get:
      description: >-
        'Share all the damage that you can chose'
      summary: See the Damages
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'filter gadget'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/filter/bear:
    get:
      description: >-
        'Take the position of bear'
      summary: Bear position
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Bear Position'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/filter/fire:
    get:
      description: >-
        'Take the position of fire'
      summary: Fire position
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Fire Position'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/filter/avaanche:
    get:
      description: >-
        'Take the position of avalanche'
      summary: Avalanche position
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Avalanche Position'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/filter/hunting:
    get:
      description: >-
        'Take the position of hunting'
      summary: Hunting position
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Hunting Position'
          content:
            application/json:
              schema:
                type: object
                items:
    
  /users/map/widgets/ways:
    get:
      description: >-
        'Share all the ways using the site of Società Alpinisti Tridentini'
      summary: See the ways
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Ways gadget'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /users/map/widgets/logout:
    get:
      description: >-
        'Users can go out of the application and login with an other account'
      summary: Do the logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'Logout'
          content:
            application/json:
              schema:
                type: object
                items:
  
  /users/map/chat:
     post:
      description: >-
        'Send the message to help chat'
      summary: Insert the request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - messaggio
              properties:
                messaggio:
                  type: string
                  description: 'problem of the users in messages'
      responses:
        '201':
          description: 'User call. Insert the message'
          headers:
            'New message/chat':
              schema:
                type: String
              description: Link to send message/request.
              
  /admin/log_admin:
    get:
      description: >-
        'Login of the admin'
      summary: Login admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: 'Email address of the admin'
                password:
                  type: string
                  description: 'Password of the admin'
      responses:
        '200':
          description: 'Login'
          content:
            application/json:
              schema:
                type: object
                items:
                
  /admin/callCenter/firstStep:
    get:
      description: >-
        'insert number of user that need help'
      summary: Help Sos by admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - telefono
              properties:
                telefono:
                  type: string
                  description: 'number  of the users'
      responses:
        '200':
          description: 'Sos by admin'
          content:
            application/json:
              schema:
                type: object
                items:
  
    /admin/callCenter/secondStep:
      get:
      description: >-
        'the admin request the map to OpenStreetMap'
      summary: Map
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: 'admin Map'
          content:
            application/json:
              schema:
                type: object
                items:
  
  /admin/tecnicSupport:
    post:
      description: >-
        'Send the message to users'
      summary: Insert the response
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - messaggio
              properties:
                messaggio:
                  type: string
                  description: 'solve the problem of the users in messages'
      responses:
        '201':
          description: 'admin call. Insert the message'
          headers:
            'New message/chat':
              schema:
                type: String
              description: Link to send message/request.
              
  /admin/Mod/Interface:
    post:
      description: >-
        'Send the coordinate and type of new damage to database'
      summary: Insert the new damage
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              properties:
      responses:
        '201':
          description: 'admin call. Insert the damage'
          headers:
            'New damage':
              schema:
                type: String
              description: Link to send damage.
              
    
              
  
  
  
  
  
  
  
          
